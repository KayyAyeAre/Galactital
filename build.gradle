buildscript {
    ext {
        getArcHash = {
            return new Properties().with { p -> p.load(file('gradle.properties').newReader()); return p }["archash"]
        }

        arcHash = getArcHash()
        arcVersion = "v135"
    }

    repositories {
        mavenCentral()
        maven { url "https://jitpack.io" }
    }

    dependencies {
        classpath "com.github.Anuken.Arc:arc-core:$arcVersion"
        classpath "com.github.Anuken.Arc:packer:$arcVersion"
    }
}

allprojects {
    version = '1.0'

    repositories {
        mavenCentral()
        maven { url "https://jitpack.io" }
    }

    ext {
        writeProcessors = {
            new File(rootDir, "annotations/src/main/resources/META-INF/services/").mkdirs()
            def processorFile = new File(rootDir, "annotations/src/main/resources/META-INF/services/javax.annotation.processing.Processor")
            def text = new StringBuilder()
            def files = new File(rootDir, "annotations/src/main/java")
            files.eachFileRecurse(groovy.io.FileType.FILES) { file ->
                if (file.name.endsWith(".java") && (file.text.contains(" extends BaseProcessor") || (file.text.contains(" extends AbstractProcessor") && !file.text.contains("abstract class")))) {
                    text.append(file.path.substring(files.path.length() + 1)).append("\n")
                }
            }

            processorFile.text = text.toString().replace(".java", "").replace("/", ".").replace("\\", ".")
        }
    }
}

project(":annotations") {
    apply plugin: "java-library"

    dependencies {
        implementation 'com.squareup:javapoet:1.12.1'
        implementation "com.github.Anuken.Arc:arc-core:$arcHash"
    }
}

configure(project(":annotations")) {
    tasks.withType(JavaCompile) {
        targetCompatibility = 8
        sourceCompatibility = 8
        options.fork = true
    }
}

project(":core") {
    apply plugin: "java"

    task generateCode {
        writeProcessors()
    }

    dependencies {
        compileJava.dependsOn(generateCode)

        compileOnly project(":annotations")
        implementation "com.github.Anuken.Arc:arc-core:$arcVersion"
        implementation "com.github.Anuken.Arc:packer:$arcVersion"
        implementation "com.github.Anuken.Arc:freetype:$arcVersion"
        annotationProcessor project(":annotations")
    }
}

project(":desktop") {
    apply plugin: "java"

    dependencies {
        implementation project(":core")
        implementation "com.github.Anuken.Arc:arc-core:$arcVersion"
        implementation "com.github.Anuken.Arc:backend-sdl:$arcVersion"
        implementation "com.github.Anuken.Arc:natives-desktop:$arcVersion"
        implementation "com.github.Anuken.Arc:natives-freetype-desktop:$arcVersion"
    }
}